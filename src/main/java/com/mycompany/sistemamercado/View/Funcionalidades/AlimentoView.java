package com.mycompany.sistemamercado.View.Funcionalidades;

import com.mycompany.sistemamercado.Controller.AlimentoController;
import com.mycompany.sistemamercado.Excecoes.CampoVazio;
import com.mycompany.sistemamercado.Model.Alimento;
import com.mycompany.sistemamercado.Model.BancoDeDados;
import com.mycompany.sistemamercado.Model.Usuario;
import com.mycompany.sistemamercado.View.Login;
import com.mycompany.sistemamercado.View.dashAdmin;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * @aluno: Augusto Benedito Carvalho da Silva
 * @Matricula: 202265552C
 */
public class AlimentoView extends javax.swing.JFrame {

    public AlimentoView() {
        initComponents();
        setLocationRelativeTo(null);
        preencherListaAlimento();
    }

    public List<Alimento> carregarAlimento() throws IOException {
        BancoDeDados.leBDAlimento(BancoDeDados.getBancoAlimento());
        return Alimento.getListaAlimento();
    }

    public void preencherListaAlimento() {
        try {
            List<Alimento> listaAlimento = carregarAlimento();

            // Criar um modelo para a JList
            DefaultListModel<Alimento> listModel = new DefaultListModel<>();

            // Adicionar todos os administradores à lista
            for (Alimento alimento : listaAlimento) {
                listModel.addElement(alimento);
            }

            // Definir o modelo à jListAdmin
            jListAlimentos.setModel(listModel);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar administradores: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListAlimentos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jButtonEditar = new javax.swing.JButton();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextEstoque = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextPeso = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextPreco = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuVoltar = new javax.swing.JMenu();
        jMenuLogout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListAlimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListAlimentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListAlimentos);

        jLabel1.setText("Nome:");

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.setEnabled(false);
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantidade (estoque):");

        jLabel6.setText("Peso (gramas):");

        jLabel7.setText("Preco:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextEstoque))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPeso))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPreco)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdicionar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonRemover))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jMenuVoltar.setText("Voltar");
        jMenuVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuVoltarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuVoltar);

        jMenuLogout.setText("Logout");
        jMenuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLogoutMouseClicked(evt);
            }
        });
        jMenuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLogoutActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuLogout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLogoutMouseClicked
        int resposta = JOptionPane.showConfirmDialog(this, "Você realmente deseja sair?",
                "Confirmação de Logout", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            Usuario.setUsuarioLogado(null); // Limpa a sessão do usuário logado
            JOptionPane.showMessageDialog(this, "Logout realizado com sucesso!");
            Login telaLogin = new Login();
            this.dispose();
            telaLogin.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Logout cancelado.");
        }
    }//GEN-LAST:event_jMenuLogoutMouseClicked

    private void jMenuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuLogoutActionPerformed

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        // TODO add your handling code here:
        try {
            String nome = jTextName.getText().trim();
            int estoque = Integer.parseInt(jTextEstoque.getText().trim());
            // Corrige eventuais falhas, ao receber "," ao invés de "."
            String valorStr = jTextPreco.getText().trim().replace(",", ".");
            String pesoStr = jTextPeso.getText().trim().replace(",", ".");

            float valor = Float.parseFloat(valorStr);
            int peso = Integer.parseInt(pesoStr);

            // Verifica se o alimento já está cadastrado
            for (Alimento food : Alimento.getListaAlimento()) {
                String nomeFoodFormatado = food.getNome().replaceAll(" ", "").toLowerCase();
                String nomeAlimentoFormatado = nome.replaceAll(" ", "").toLowerCase();
                if (nomeFoodFormatado.equals(nomeAlimentoFormatado)) {
                    throw new Exception("Já existe um alimento com o mesmo nome");
                }
            }

            // Adiciona o novo alimento
            Alimento.validaCampoVazioAdiciona(nome, estoque, valor, peso);
            Alimento alimento = new Alimento(nome, estoque, valor, peso);
            AlimentoController.adiciona(alimento);
            JOptionPane.showMessageDialog(null, "Alimento cadastrado com sucesso!");
            jTextName.setText("");
            jTextEstoque.setText("");
            jTextPreco.setText("");
            jTextPeso.setText("");
            preencherListaAlimento();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, insira valores válidos para preço e peso.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar alimento: " + e.getMessage());
        }


    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed

        try {

            Alimento alimentoBanco = new Alimento(); // Inicializa um novo objeto Alimento

            BancoDeDados.leBDAlimento(BancoDeDados.getBancoAlimento()); // Método para ler os alimentos do banco de dados
            // Corrige eventuais falhas, ao receber "," ao invés de "."

            // Pega o alimento que foi selecionado na JList
            Alimento alimentoSelecionado = jListAlimentos.getSelectedValue(); // Obtem o alimento selecionado na JList
            for (Alimento alimento : Alimento.getListaAlimento()) {
                if (alimento.getNome().equals(alimentoSelecionado.getNome())) {
                    alimentoBanco = alimento;
                    break;
                }
            }
            String nome = jTextName.getText().trim();
            int estoque = Integer.parseInt(jTextEstoque.getText().trim());
            String valorStr = jTextPreco.getText().trim().replace(",", ".");
            String pesoStr = jTextPeso.getText().trim().replace(",", ".");

            float valor = Float.parseFloat(valorStr);
            int peso = Integer.parseInt(pesoStr);
            Alimento.validaCampoVazioAdiciona(nome, estoque, valor, peso);

            Alimento.validaCampoVazioAdiciona(nome, estoque, valor, peso); // Validação do alimento
            Alimento alimentoEdita = new Alimento(nome, estoque, valor, peso);
            AlimentoController.edita(alimentoBanco, alimentoEdita); // Método para editar o alimento
            JOptionPane.showMessageDialog(null, "Alimento editado com sucesso!!");
            preencherListaAlimento();
            jTextName.setText("");
            jTextEstoque.setText("");
            jTextPreco.setText("");
            jTextPeso.setText("");
            jButtonEditar.setEnabled(false);
            jButtonRemover.setEnabled(false);
        } catch (CampoVazio e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jListAlimentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListAlimentosMouseClicked

        // Verifica se o clique foi duplo
        if (evt.getClickCount() == 2) {
            // Verifica se há um item selecionado
            if (jListAlimentos.getSelectedValue() != null) {
                // Obtém o alimento selecionado
                Alimento alimentoSelecionado = jListAlimentos.getSelectedValue();

                // Preenche os campos com os detalhes do alimento selecionado
                jTextName.setText(alimentoSelecionado.getNome());
                jTextEstoque.setText(String.valueOf(alimentoSelecionado.getEstoque()));
                jTextPreco.setText(String.valueOf(alimentoSelecionado.getValor()));
                jTextPeso.setText(String.valueOf(alimentoSelecionado.getPeso()));
                jButtonEditar.setEnabled(true);
                jButtonRemover.setEnabled(true);
            }
        }

    }//GEN-LAST:event_jListAlimentosMouseClicked

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed

        try {
            Alimento alimentoBanco = null; // Inicialize como null
            BancoDeDados.leBDAlimento(BancoDeDados.getBancoAlimento());

            // Pega o alimento que foi selecionado
            int selectedIndex = jListAlimentos.getSelectedIndex(); // Obtém o índice do item selecionado
            if (selectedIndex != -1) { // Verifica se algum item foi selecionado
                alimentoBanco = Alimento.getListaAlimento().get(selectedIndex); // Pega o alimento pelo índice
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um alimento para deletar.");
                return; // Sai do método se nenhum alimento for selecionado
            }

            AlimentoController.deleta(alimentoBanco);
            JOptionPane.showMessageDialog(null, "Alimento deletado com sucesso");
            jTextName.setText("");
            jTextEstoque.setText("");
            jTextPreco.setText("");
            jTextPeso.setText("");
            jButtonEditar.setEnabled(false);
            jButtonRemover.setEnabled(false);
            preencherListaAlimento();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao deletar alimento");
        }

    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jMenuVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuVoltarMouseClicked

        this.dispose();
        dashAdmin view = new dashAdmin();
        view.setVisible(true);
    }//GEN-LAST:event_jMenuVoltarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlimentoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlimentoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlimentoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlimentoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlimentoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<com.mycompany.sistemamercado.Model.Alimento> jListAlimentos;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuLogout;
    private javax.swing.JMenu jMenuVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextEstoque;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPeso;
    private javax.swing.JTextField jTextPreco;
    // End of variables declaration//GEN-END:variables
}
