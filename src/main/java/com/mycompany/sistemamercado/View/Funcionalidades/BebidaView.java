package com.mycompany.sistemamercado.View.Funcionalidades;

import com.mycompany.sistemamercado.Controller.BebidaController;
import com.mycompany.sistemamercado.Excecoes.CampoVazio;
import com.mycompany.sistemamercado.Model.BancoDeDados;
import com.mycompany.sistemamercado.Model.Bebida;
import com.mycompany.sistemamercado.Model.BebidaComAlcool;
import com.mycompany.sistemamercado.Model.BebidaSemAlcool;
import com.mycompany.sistemamercado.Model.Usuario;
import com.mycompany.sistemamercado.View.Login;
import com.mycompany.sistemamercado.View.dashAdmin;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * @aluno: Augusto Benedito Carvalho da Silva
 * @Matricula: 202265552C
 */

public class BebidaView extends javax.swing.JFrame {

    /**
     * Creates new form BebidaViewNEW
     */
    public BebidaView() {
        initComponents();
        setLocationRelativeTo(null);
        preencherListaBebida();

    }

    public void preencherListaBebida() {
        try {
            BancoDeDados.leBDBebidaComAlcool(BancoDeDados.getBancoBebidaComAlcool());
            BancoDeDados.leBDBebidaSemAlcool(BancoDeDados.getBancoBebidaSemAlcool());
            DefaultListModel<BebidaComAlcool> comAlcool = new DefaultListModel<>();
            jListBebidasComAlcool.setModel(comAlcool);
            for (BebidaComAlcool bebida : BebidaComAlcool.getListaBebidasComAlcool()) {
                comAlcool.addElement(bebida);
            }
            DefaultListModel<BebidaSemAlcool> semAlcool = new DefaultListModel<>();
            jListBebidasSemAlcool.setModel(semAlcool);
            for (BebidaSemAlcool bebida : BebidaSemAlcool.getListaBebidasSemAlcool()) {
                semAlcool.addElement(bebida);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "erro");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxBebida = new javax.swing.JCheckBox();
        jButtonRemover = new javax.swing.JButton();
        jButtonAdicionar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jTextEstoque = new javax.swing.JTextField();
        jTextQuantidade = new javax.swing.JTextField();
        jTextPreco = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListBebidasComAlcool = new javax.swing.JList<>();
        jListBebidasSemAlcool = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuVoltar = new javax.swing.JMenu();
        jMenuLogout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setText("Estoque:");

        jLabel3.setText("Quantidade (ML):");

        jLabel4.setText("Preco:");

        jCheckBoxBebida.setText("Bebida Alcoolica");
        jCheckBoxBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBebidaActionPerformed(evt);
            }
        });

        jButtonRemover.setText("Remover");
        jButtonRemover.setEnabled(false);
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jTextQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextQuantidadeActionPerformed(evt);
            }
        });

        jListBebidasComAlcool.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListBebidasComAlcoolMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListBebidasComAlcool);

        jListBebidasSemAlcool.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListBebidasSemAlcoolMouseClicked(evt);
            }
        });

        jLabel5.setText("Bebidas Sem Alcool:");

        jLabel6.setText("Bebidas ComAlcool:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextName)
                                    .addComponent(jTextEstoque)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jCheckBoxBebida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextQuantidade)
                                    .addComponent(jTextPreco)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jListBebidasSemAlcool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jListBebidasSemAlcool, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxBebida)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRemover)
                    .addComponent(jButtonAdicionar)
                    .addComponent(jButtonEditar))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jMenuVoltar.setText("Voltar");
        jMenuVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuVoltarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuVoltar);

        jMenuLogout.setText("Logout");
        jMenuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLogoutMouseClicked(evt);
            }
        });
        jMenuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLogoutActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuLogout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLogoutMouseClicked
        int resposta = JOptionPane.showConfirmDialog(this, "Você realmente deseja sair?",
                "Confirmação de Logout", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            Usuario.setUsuarioLogado(null); // Limpa a sessão do usuário logado
            JOptionPane.showMessageDialog(this, "Logout realizado com sucesso!");
            Login telaLogin = new Login();
            this.dispose();
            telaLogin.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Logout cancelado.");
        }
    }//GEN-LAST:event_jMenuLogoutMouseClicked

    private void jMenuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuLogoutActionPerformed

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        try {
            // Obtém os dados do formulário
            String nome = jTextName.getText().trim();
            int estoque = Integer.parseInt(jTextEstoque.getText().trim());
            int qntML = Integer.parseInt(jTextQuantidade.getText().trim());

            // Corrige eventuais falhas ao receber "," ao invés de "."
            String valorStr = jTextPreco.getText().trim().replace(",", ".");
            float valor = Float.parseFloat(valorStr);

            // Formata o nome da bebida de entrada
            String nomeBebidaFormatadoEntrada = nome.replaceAll(" ", "").toLowerCase();
            boolean isSelected = jCheckBoxBebida.isSelected();

            // Verifica se já existe uma bebida com o mesmo nome
            for (BebidaComAlcool bebida : BebidaComAlcool.getListaBebidasComAlcool()) {
                String nomeBebidaFormatado = bebida.getNome().replaceAll(" ", "").toLowerCase();
                if (nomeBebidaFormatado.equals(nomeBebidaFormatadoEntrada)) {
                    throw new Exception("Já existe uma bebida com o mesmo nome");
                }
            }

            for (BebidaSemAlcool bebida : BebidaSemAlcool.getListaBebidasSemAlcool()) {
                String nomeBebidaFormatado = bebida.getNome().replaceAll(" ", "").toLowerCase();
                if (nomeBebidaFormatado.equals(nomeBebidaFormatadoEntrada)) {
                    throw new Exception("Já existe uma bebida com o mesmo nome");
                }
            }

            // Valida campos vazios
            Bebida.validaCampoVazioAdiciona(nome, estoque, qntML, valor);

            // Cria a nova bebida conforme o tipo
            if (isSelected) {
                BebidaComAlcool bebidaNova = new BebidaComAlcool(nome, estoque, valor, qntML);
                BebidaController.adicionaBebidaComAlcool(bebidaNova);
            } else {
                BebidaSemAlcool bebidaNova = new BebidaSemAlcool(nome, estoque, valor, qntML);
                BebidaController.adicionaBebidaSemAlcool(bebidaNova);
            }

            // Adiciona a nova bebida à lista
            // Exibe mensagem de sucesso
            JOptionPane.showMessageDialog(null, "Bebida cadastrada com sucesso!");
                jTextName.setText("");
                    jTextEstoque.setText("");
                    jTextQuantidade.setText("");
                    jTextPreco.setText("");

            preencherListaBebida();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, insira valores válidos para preço e quantidade.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar bebida: " + e.getMessage());
        }

    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
        try {

            // Verifica se a checkbox está marcada (bebida alcoólica) ou não (bebida sem álcool)
            boolean isAlcoolica = jCheckBoxBebida.isSelected();

            // Inicializa variáveis de bebida
            BebidaComAlcool bebidaComAlcoolBanco = null;
            BebidaSemAlcool bebidaSemAlcoolBanco = null;

            // Carrega os dados das bebidas do banco
            BancoDeDados.leBDBebidaComAlcool(BancoDeDados.getBancoBebidaComAlcool());
            BancoDeDados.leBDBebidaSemAlcool(BancoDeDados.getBancoBebidaSemAlcool());

            // Obtém a bebida selecionada na JList (essa lista contém tanto bebidas com álcool quanto sem álcool)
            if (isAlcoolica) {
                // Se for bebida alcoólica, procura na lista de bebidas com álcool
                Bebida bebidaSelecionada = jListBebidasComAlcool.getSelectedValue();
                for (BebidaComAlcool bebida : BebidaComAlcool.getListaBebidasComAlcool()) {
                    if (bebida.getNome().equals(bebidaSelecionada.getNome())) {
                        bebidaComAlcoolBanco = bebida;
                        break;
                    }
                }

                // Se a bebida alcoólica foi encontrada, realiza a edição
                if (bebidaComAlcoolBanco != null) {
                    String nome = jTextName.getText().trim();
                    int estoque = Integer.parseInt(jTextEstoque.getText().trim());
                    String valorStr = jTextPreco.getText().trim().replace(",", ".");

                    float valor = Float.parseFloat(valorStr);
                    int quantidadeML = Integer.parseInt(jTextQuantidade.getText().trim());

                    // Validação dos campos
                    Bebida.validaCampoVazioAdiciona(nome, estoque, quantidadeML, valor);

                    // Criar o objeto editado
                    BebidaComAlcool bebidaEditada = new BebidaComAlcool(nome, estoque, valor, quantidadeML);
                    BebidaController.editaBebidaComAlcool(bebidaComAlcoolBanco, bebidaEditada); // Método para editar bebida com álcool
                    JOptionPane.showMessageDialog(null, "Bebida com álcool editada com sucesso!");
                    jTextName.setText("");
                    jTextEstoque.setText("");
                    jTextQuantidade.setText("");
                    jTextPreco.setText("");
                    jCheckBoxBebida.setSelected(false);
                    jCheckBoxBebida.setEnabled(false);
                    jButtonEditar.setEnabled(true);
                    jButtonRemover.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Bebida com álcool não encontrada!");
                }

            } else {
                // Se for bebida sem álcool, procura na lista de bebidas sem álcool
                for (BebidaSemAlcool bebida : BebidaSemAlcool.getListaBebidasSemAlcool()) {
                    Bebida bebidaSelecionada = jListBebidasSemAlcool.getSelectedValue();
                    if (bebida.getNome().equals(bebidaSelecionada.getNome())) {
                        bebidaSemAlcoolBanco = bebida;
                        break;
                    }
                }

                // Se a bebida sem álcool foi encontrada, realiza a edição
                if (bebidaSemAlcoolBanco != null) {
                    String nome = jTextName.getText().trim();
                    int estoque = Integer.parseInt(jTextEstoque.getText().trim());
                    String valorStr = jTextPreco.getText().trim().replace(",", ".");

                    float valor = Float.parseFloat(valorStr);
                    int quantidadeML = Integer.parseInt(jTextQuantidade.getText().trim());

                    // Validação dos campos
                    Bebida.validaCampoVazioAdiciona(nome, estoque, quantidadeML, valor);

                    // Criar o objeto editado
                    BebidaSemAlcool bebidaEditada = new BebidaSemAlcool(nome, estoque, valor, quantidadeML);
                    BebidaController.editaBebidaSemAlcool(bebidaSemAlcoolBanco, bebidaEditada); // Método para editar bebida sem álcool
                    JOptionPane.showMessageDialog(null, "Bebida sem álcool editada com sucesso!");
                    jTextName.setText("");
                    jTextEstoque.setText("");
                    jTextQuantidade.setText("");
                    jTextPreco.setText("");
                    jCheckBoxBebida.setSelected(false);
                    jCheckBoxBebida.setEnabled(false);
                    jButtonEditar.setEnabled(true);
                    jButtonRemover.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Bebida sem álcool não encontrada!");
                }
            }

            preencherListaBebida();

        } catch (CampoVazio e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao acessar o banco de dados: " + e.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao converter valor numérico: " + e.getMessage());
        }

    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jListBebidasSemAlcoolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListBebidasSemAlcoolMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            // Verifica se há um item selecionado
            if (jListBebidasSemAlcool.getSelectedValue() != null) {
                // Obtém o alimento selecionado
                BebidaSemAlcool bebidaSelecionada = jListBebidasSemAlcool.getSelectedValue();

                // Preenche os campos com os detalhes do alimento selecionado
                jTextName.setText(bebidaSelecionada.getNome());
                jTextEstoque.setText(String.valueOf(bebidaSelecionada.getEstoque()));
                jTextQuantidade.setText(String.valueOf(bebidaSelecionada.getQuantidadeML()));
                jTextPreco.setText(String.valueOf(bebidaSelecionada.getValor()));
                jCheckBoxBebida.setSelected(true);
                jCheckBoxBebida.setEnabled(true);
                jButtonEditar.setEnabled(false);
                jButtonRemover.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jListBebidasSemAlcoolMouseClicked

    private void jListBebidasComAlcoolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListBebidasComAlcoolMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            // Verifica se há um item selecionado
            if (jListBebidasComAlcool.getSelectedValue() != null) {
                // Obtém o alimento selecionado
                BebidaComAlcool bebidaSelecionada = jListBebidasComAlcool.getSelectedValue();

                // Preenche os campos com os detalhes do alimento selecionado
                jTextName.setText(bebidaSelecionada.getNome());
                jTextEstoque.setText(String.valueOf(bebidaSelecionada.getEstoque()));
                jTextQuantidade.setText(String.valueOf(bebidaSelecionada.getQuantidadeML()));
                jTextPreco.setText(String.valueOf(bebidaSelecionada.getValor()));
                jCheckBoxBebida.setSelected(true);
                jCheckBoxBebida.setEnabled(false);
                jButtonEditar.setEnabled(true);
                jButtonRemover.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jListBebidasComAlcoolMouseClicked

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        // TODO add your handling code here:
        try {
            boolean isAlcoolica = jCheckBoxBebida.isSelected();
            if (isAlcoolica) {
                BebidaComAlcool bebidaBanco = null; // Inicialize como null
                BancoDeDados.leBDBebidaComAlcool(BancoDeDados.getBancoBebidaComAlcool());

                // Pega o alimento que foi selecionado
                int selectedIndex = jListBebidasComAlcool.getSelectedIndex(); // Obtém o índice do item selecionado
                if (selectedIndex != -1) { // Verifica se algum item foi selecionado
                    bebidaBanco = BebidaComAlcool.getListaBebidasComAlcool().get(selectedIndex); // Pega o alimento pelo índice
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione uma Bebida para deletar.");
                    return; // Sai do método se nenhum alimento for selecionado
                }

                BebidaController.deletaBebidaComAlcool(bebidaBanco);
                JOptionPane.showMessageDialog(null, "Bebida deletada com sucesso");
                jTextName.setText("");
                jTextEstoque.setText("");
                jTextQuantidade.setText("");
                jTextPreco.setText("");
                jCheckBoxBebida.setSelected(false);
                jCheckBoxBebida.setEnabled(false);
                jButtonEditar.setEnabled(true);
                jButtonRemover.setEnabled(true);
            } else {
                BebidaSemAlcool bebidaBanco = null; // Inicialize como null
                BancoDeDados.leBDBebidaSemAlcool(BancoDeDados.getBancoBebidaSemAlcool());

                // Pega o alimento que foi selecionado
                int selectedIndex = jListBebidasSemAlcool.getSelectedIndex(); // Obtém o índice do item selecionado
                if (selectedIndex != -1) { // Verifica se algum item foi selecionado
                    bebidaBanco = BebidaSemAlcool.getListaBebidasSemAlcool().get(selectedIndex); // Pega a bebida pelo índice
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione uma Bebida para deletar.");
                    return; // Sai do método se nenhum alimento for selecionado
                }

                BebidaController.deletaBebidaSemAlcool(bebidaBanco);
                JOptionPane.showMessageDialog(null, "Bebida deletada com sucesso");
                jTextName.setText("");
                jTextEstoque.setText("");
                jTextQuantidade.setText("");
                jTextPreco.setText("");
                jCheckBoxBebida.setSelected(false);
                jCheckBoxBebida.setEnabled(false);
                jButtonEditar.setEnabled(true);
                jButtonRemover.setEnabled(true);
            }
            preencherListaBebida();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Erro ao deletar bebida");
        }
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jCheckBoxBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBebidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxBebidaActionPerformed

    private void jTextQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextQuantidadeActionPerformed

    private void jMenuVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuVoltarMouseClicked
        // TODO add your handling code here:
        this.dispose();
        dashAdmin view = new dashAdmin();
        view.setVisible(true);
    }//GEN-LAST:event_jMenuVoltarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BebidaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BebidaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BebidaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BebidaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BebidaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JCheckBox jCheckBoxBebida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<BebidaComAlcool> jListBebidasComAlcool;
    private javax.swing.JList<BebidaSemAlcool> jListBebidasSemAlcool;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuLogout;
    private javax.swing.JMenu jMenuVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextEstoque;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPreco;
    private javax.swing.JTextField jTextQuantidade;
    // End of variables declaration//GEN-END:variables
}
