package com.mycompany.sistemamercado.View;

import com.mycompany.sistemamercado.Model.ComValor;
import com.mycompany.sistemamercado.Model.ListaCompra;
import com.mycompany.sistemamercado.Model.Usuario;
import com.mycompany.sistemamercado.View.Funcionalidades.Cliente.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * @aluno: augusto Benedito Carvalho da Silva
 * @matricula: 202265552C
 */
public class dashCliente extends javax.swing.JFrame {

    /**
     * Creates new form dashCliente
     */ // Lista de compras
    private DefaultListModel<ComValor> listModel; // Modelo da JList

    public dashCliente() {
        this.listModel = new DefaultListModel<>();
        initComponents();
        setLocationRelativeTo(null);
        preencherJList();

    }

    private void preencherJList() {
        listModel.clear(); // Limpa o modelo
        for (ComValor item : ListaCompra.getListaCompra()) {
            listModel.addElement(item); // Adiciona elementos ao modelo
        }
        jList1.setModel(listModel);
    }

    public boolean tem18Anos(String dataNascimento) {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy"); // Formato da data
        try {
            Date nascimento = formato.parse(dataNascimento); // Converte a string para Date
            Calendar dataAtual = Calendar.getInstance(); // Obtém a data atual
            Calendar dataNascimentoCal = Calendar.getInstance();
            dataNascimentoCal.setTime(nascimento); // Define a data de nascimento no Calendar

            int idade = dataAtual.get(Calendar.YEAR) - dataNascimentoCal.get(Calendar.YEAR); // Calcula a idade

            // Ajusta a idade se o aniversário ainda não ocorreu neste ano
            if (dataAtual.get(Calendar.DAY_OF_YEAR) < dataNascimentoCal.get(Calendar.DAY_OF_YEAR)) {
                idade--;
            }

            return idade >= 18; // Retorna true se tem 18 anos ou mais
        } catch (ParseException e) {
            e.printStackTrace(); // Trata a exceção de parsing
            return false; // Retorna false em caso de erro
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButtonAlimentos = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBoxPagamento = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jBtnBA = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuLogout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Lista de Compras:");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonAlimentos.setText("Acessar Alimentos");
        jButtonAlimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlimentosActionPerformed(evt);
            }
        });

        jButton2.setText("Acessar Bebidas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBoxPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Forma de Pagamento:", "Pix", "Credito", "Debito" }));
        jComboBoxPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPagamentoActionPerformed(evt);
            }
        });

        jButton3.setText("Finalizar Compra");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jBtnBA.setText("Acessar Bebidas Alcoolicas");
        jBtnBA.setEnabled(tem18Anos(Usuario.getUsuarioLogado().getDataNascimento()));
        jBtnBA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBAActionPerformed(evt);
            }
        });

        jMenu1.setText("Usuario: " + Usuario.getUsuarioLogado().getNome() );
        jMenuBar1.add(jMenu1);

        jMenuLogout.setText("Logout");
        jMenuLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLogoutMouseClicked(evt);
            }
        });
        jMenuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLogoutActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuLogout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAlimentos, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnBA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxPagamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButtonAlimentos)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jBtnBA)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLogoutActionPerformed

    }//GEN-LAST:event_jMenuLogoutActionPerformed

    private void jMenuLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLogoutMouseClicked
        int resposta = JOptionPane.showConfirmDialog(this, "Você realmente deseja sair?",
                "Confirmação de Logout", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            Usuario.setUsuarioLogado(null); // Limpa a sessão do usuário logado
            JOptionPane.showMessageDialog(this, "Logout realizado com sucesso!");
            ListaCompra.clear();
            Login telaLogin = new Login();
            this.dispose();
            telaLogin.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Logout cancelado.");
        }
    }//GEN-LAST:event_jMenuLogoutMouseClicked

    private void jButtonAlimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlimentosActionPerformed
        // TODO add your handling code here:
        AlimentoViewCliente AlimentoView = new AlimentoViewCliente();
        this.dispose();
        AlimentoView.setVisible(true);
    }//GEN-LAST:event_jButtonAlimentosActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        BebidaViewCliente View = new BebidaViewCliente();
        this.dispose();
        View.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBtnBAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBAActionPerformed
        // TODO add your handling code here:
        BebidaAlcoolViewCliente View = new BebidaAlcoolViewCliente();
        this.dispose();
        View.setVisible(true);      
    }//GEN-LAST:event_jBtnBAActionPerformed

    private void jComboBoxPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPagamentoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    try {
        // Calcula o total de itens e o valor total
        int totalItems = ListaCompra.getListaCompra().size(); // Total de itens na lista
        float valorTotal = ListaCompra.calcularValorTotal(); // Valor total da lista
        
        // Obtém a forma de pagamento selecionada
        String pagamentoSelecionado = (String) jComboBoxPagamento.getSelectedItem();
        
        // Verifica se o primeiro item (ou seja, a opção inválida) foi selecionado
        if (pagamentoSelecionado.equals("Forma de Pagamento:")) {
            throw new IllegalArgumentException("Por favor, selecione um método de pagamento válido.");
        }

        // Aplica as taxas conforme o método de pagamento
        switch (pagamentoSelecionado) {
            case "Pix":
                // Nenhuma taxa adicional
                break;
            case "Crédito":
                valorTotal *= 1.02; // Adiciona 2% ao valor total
                break;
            case "Débito":
                // Nenhuma taxa adicional
                break;
            default:
                throw new IllegalArgumentException("Método de pagamento inválido.");
        }
        
        // Monta a mensagem
        String mensagem = "Total de itens: " + totalItems + "\n" +
                          "Valor total: R$ " + String.format("%.2f", valorTotal) + "\n" +
                          "Forma de pagamento: " + pagamentoSelecionado + "\n" + "Agradecemos por sua compra, volte sempre :)";
        
        // Exibe a mensagem
        JOptionPane.showMessageDialog(this, mensagem, "Resumo da Compra", JOptionPane.INFORMATION_MESSAGE);
        ListaCompra.clear();
        this.dispose();
        Login login = new Login();
        login.setVisible(true);
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jBtnBA;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAlimentos;
    private javax.swing.JComboBox<String> jComboBoxPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<ComValor> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuLogout;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
